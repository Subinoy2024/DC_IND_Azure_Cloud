# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: DC_DataCenter

variables:

  config_path: '$(System.DefaultWorkingDirectory)/DC_3Tier_Azure_Infra_WebApp/WebApp_Project'
  backend_sc: 'DC_WID_SC01'
steps:
- task: TerraformInstaller@1
  displayName: terraform installation
  inputs:
    terraformVersion: 'latest'
- task: TerraformTask@5
  displayName: Initilizing terraform init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: $(config_path)
    backendServiceArm: $(backend_sc)
    backendAzureRmStorageAccountName: 'dcindstoragea001'
    backendAzureRmContainerName: 'dcpipeline001'
    backendAzureRmKey: 'webappdc.tfstate'
- task: TerraformTask@5
  displayName: running terraform fmt
  inputs:
    provider: 'azurerm'
    command: 'custom'
    workingDirectory: $(config_path)
    outputTo: 'console'
    customCommand: 'fmt'
    environmentServiceNameAzureRM: $(backend_sc)
- task: TerraformTask@5
  displayName: running terraform validate
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: $(config_path)

- task: TerraformTask@5
  displayName: executing terraform plan for infra
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: $(config_path)
    environmentServiceNameAzureRM: $(backend_sc)

